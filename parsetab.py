
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNAR BREAK CADENA CASE CHAR CONST CONTINUE DEFAULT DIV DO ELSE END ENUM FLOAT FOR IDENTIFICADOR IF INT LA LLAVE_APERTURA LLAVE_CIERRE LONG MAIN MULT NUMERO PARENTESIS_APERTURA PARENTESIS_CIERRE PRINT PRINTF PROGRAMA PUNTOYCOMA READ RESTA RETURN SHORT SIGNED SIZEOF STATIC STRUCT SUMA SWITCH TYPEDEF UNION UNSIGNED VARIABLE VOID WHILEprograma : PROGRAMA IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA declaraciones LLAVE_CIERREdeclaraciones : declaraciones declaracion\n                     | declaraciondeclaracion : tipo IDENTIFICADOR PUNTOYCOMA\n                   | declaracion_variabledeclaracion_variable : IDENTIFICADOR ASIGNAR expresion PUNTOYCOMAinstruccion : READ IDENTIFICADOR PUNTOYCOMA\n                   | PRINTF CADENA PUNTOYCOMA\n                   | IDENTIFICADOR ASIGNAR expresion PUNTOYCOMA\n                   | END PUNTOYCOMA\n                   | WHILE PARENTESIS_APERTURA expresion PARENTESIS_CIERRE LLAVE_APERTURA declaraciones LLAVE_CIERREtipo : INT\n            | FLOAT\n            | CHARexpresion : expresion SUMA termino\n                 | expresion RESTA termino\n                 | terminotermino : termino MULT factor\n               | termino DIV factor\n               | factorfactor : PARENTESIS_APERTURA expresion PARENTESIS_CIERRE\n              | NUMERO\n              | IDENTIFICADOR'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,16,],[0,-1,]),'IDENTIFICADOR':([2,6,8,9,10,11,12,13,14,15,17,23,25,26,27,28,29,30,],[3,7,7,-3,18,-5,-12,-13,-14,19,-2,19,-4,-6,19,19,19,19,]),'PARENTESIS_APERTURA':([3,15,23,27,28,29,30,],[4,23,23,23,23,23,23,]),'PARENTESIS_CIERRE':([4,19,21,22,24,31,32,33,34,35,36,],[5,-23,-17,-20,-22,36,-15,-16,-18,-19,-21,]),'LLAVE_APERTURA':([5,],[6,]),'INT':([6,8,9,11,17,25,26,],[12,12,-3,-5,-2,-4,-6,]),'FLOAT':([6,8,9,11,17,25,26,],[13,13,-3,-5,-2,-4,-6,]),'CHAR':([6,8,9,11,17,25,26,],[14,14,-3,-5,-2,-4,-6,]),'ASIGNAR':([7,],[15,]),'LLAVE_CIERRE':([8,9,11,17,25,26,],[16,-3,-5,-2,-4,-6,]),'NUMERO':([15,23,27,28,29,30,],[24,24,24,24,24,24,]),'PUNTOYCOMA':([18,19,20,21,22,24,32,33,34,35,36,],[25,-23,26,-17,-20,-22,-15,-16,-18,-19,-21,]),'MULT':([19,21,22,24,32,33,34,35,36,],[-23,29,-20,-22,29,29,-18,-19,-21,]),'DIV':([19,21,22,24,32,33,34,35,36,],[-23,30,-20,-22,30,30,-18,-19,-21,]),'SUMA':([19,20,21,22,24,31,32,33,34,35,36,],[-23,27,-17,-20,-22,27,-15,-16,-18,-19,-21,]),'RESTA':([19,20,21,22,24,31,32,33,34,35,36,],[-23,28,-17,-20,-22,28,-15,-16,-18,-19,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([6,],[8,]),'declaracion':([6,8,],[9,17,]),'tipo':([6,8,],[10,10,]),'declaracion_variable':([6,8,],[11,11,]),'expresion':([15,23,],[20,31,]),'termino':([15,23,27,28,],[21,21,32,33,]),'factor':([15,23,27,28,29,30,],[22,22,22,22,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA declaraciones LLAVE_CIERRE','programa',7,'p_programa','parser.py',5),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',9),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',10),
  ('declaracion -> tipo IDENTIFICADOR PUNTOYCOMA','declaracion',3,'p_declaracion','parser.py',14),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','parser.py',15),
  ('declaracion_variable -> IDENTIFICADOR ASIGNAR expresion PUNTOYCOMA','declaracion_variable',4,'p_declaracion_variable','parser.py',19),
  ('instruccion -> READ IDENTIFICADOR PUNTOYCOMA','instruccion',3,'p_instruccion','parser.py',23),
  ('instruccion -> PRINTF CADENA PUNTOYCOMA','instruccion',3,'p_instruccion','parser.py',24),
  ('instruccion -> IDENTIFICADOR ASIGNAR expresion PUNTOYCOMA','instruccion',4,'p_instruccion','parser.py',25),
  ('instruccion -> END PUNTOYCOMA','instruccion',2,'p_instruccion','parser.py',26),
  ('instruccion -> WHILE PARENTESIS_APERTURA expresion PARENTESIS_CIERRE LLAVE_APERTURA declaraciones LLAVE_CIERRE','instruccion',7,'p_instruccion','parser.py',27),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',31),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',32),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',33),
  ('expresion -> expresion SUMA termino','expresion',3,'p_expresion','parser.py',37),
  ('expresion -> expresion RESTA termino','expresion',3,'p_expresion','parser.py',38),
  ('expresion -> termino','expresion',1,'p_expresion','parser.py',39),
  ('termino -> termino MULT factor','termino',3,'p_termino','parser.py',43),
  ('termino -> termino DIV factor','termino',3,'p_termino','parser.py',44),
  ('termino -> factor','termino',1,'p_termino','parser.py',45),
  ('factor -> PARENTESIS_APERTURA expresion PARENTESIS_CIERRE','factor',3,'p_factor','parser.py',49),
  ('factor -> NUMERO','factor',1,'p_factor','parser.py',50),
  ('factor -> IDENTIFICADOR','factor',1,'p_factor','parser.py',51),
]
